import { hexToBytes } from "@noble/hashes/utils";
import { describe, test, expect } from "bun:test";
import { Kupyna512 } from "../src";

const prepareInput = (input: string) => hexToBytes(input.split("\n").join("").replaceAll(" ", ""))

describe("512 bit", () => {
    test("N = 512", () => {
        let input = prepareInput(`
000102030405060708090A0B0C0D0E0F
101112131415161718191A1B1C1D1E1F
202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F
        `)

        let expected = prepareInput(`
3813E2109118CDFB5A6D5E72F7208DCC
C80A2DFB3AFDFB02F46992B5EDBE536B
3560DD1D7E29C6F53978AF58B444E37B
A685C0DD910533BA5D78EFFFC13DE62A
        `)
        
        let a = new Kupyna512()
        expect(a.update(input).digest()).toStrictEqual(expected)
    })

    test("N = 1024", () => {
        let input = prepareInput(`
000102030405060708090A0B0C0D0E0F
101112131415161718191A1B1C1D1E1F
202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F
404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F
606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F
        `)

        let expected = prepareInput(`
76ED1AC28B1D0143013FFA87213B4090
B356441263C13E03FA060A8CADA32B97
9635657F256B15D5FCA4A174DE029F0B
1B4387C878FCC1C00E8705D783FD7FFE
        `)
        
        let a = new Kupyna512()
        expect(a.update(input).digest()).toStrictEqual(expected)
    })

    test("N = 2048", () => {
        let input = prepareInput(`
000102030405060708090A0B0C0D0E0F
101112131415161718191A1B1C1D1E1F
202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F
404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F
606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F
909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
C0C1C2C3C4C5C6C7C8C9CACBCCCDCECF
D0D1D2D3D4D5D6D7D8D9DADBDCDDDEDF
E0E1E2E3E4E5E6E7E8E9EAEBECEDEEEF
F0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF
        `)

        let expected = prepareInput(`
0DD03D7350C409CB3C29C25893A0724F
6B133FA8B9EB90A64D1A8FA93B565566
11EB187D715A956B107E3BFC76482298
133A9CE8CBC0BD5E1436A5B197284F7E`)
        
        let a = new Kupyna512()
        expect(a.update(input).digest()).toStrictEqual(expected)
    })

    test("N = 8", () => {
        let input = prepareInput(`FF`)

        let expected = prepareInput(`
871B18CF754B72740307A97B449ABEB3
2B64444CC0D5A4D65830AE5456837A72
D8458F12C8F06C98C616ABE11897F862
63B5CB77C420FB375374BEC52B6D0292
        `)
        
        let a = new Kupyna512()
        expect(a.update(input).digest()).toStrictEqual(expected)
    })

    test("N = 1536", () => {
        let input = prepareInput(`
000102030405060708090A0B0C0D0E0F
101112131415161718191A1B1C1D1E1F
202122232425262728292A2B2C2D2E2F
303132333435363738393A3B3C3D3E3F
404142434445464748494A4B4C4D4E4F
505152535455565758595A5B5C5D5E5F
606162636465666768696A6B6C6D6E6F
707172737475767778797A7B7C7D7E7F
808182838485868788898A8B8C8D8E8F
909192939495969798999A9B9C9D9E9F
A0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBF
            `)

        let expected = prepareInput(`
B189BFE987F682F5F167F0D7FA565330
E126B6E592B1C55D44299064EF95B1A5
7F3C2D0ECF17869D1D199EBBD02E8857
FB8ADD67A8C31F56CD82C016CF743121
        `)
        
        let a = new Kupyna512()
        expect(a.update(input).digest()).toStrictEqual(expected)
    })

    test("N = 0", () => {
        let input = Buffer.from("", "hex")

        let expected = prepareInput(`
656B2F4CD71462388B64A37043EA55DB
E445D452AECD46C3298343314EF04019
BCFA3F04265A9857F91BE91FCE197096
187CEDA78C9C1C021C294A0689198538`)
        
        let a = new Kupyna512()
        expect(a.update(input).digest()).toStrictEqual(expected)
    })
})